#!/usr/bin/env node
// -*- mode:js; js-indent-level:4 -*-

(function(undefined) {
	'use strict';

    var walk           = require('walk');
    var files          = [];
    var cwd            = process.cwd();
    var argv           = process.argv.slice(2);
    var requestedFiles = null;

    var testDir = __dirname+"/../";
    if (__dirname.match(/node_modules\/teste\/bin$/)) {
        // we're a node module, set the require root
        // to the root of the app, not this module.
        testDir = __dirname+"/../../../";
    }
    var requirejs = require('requirejs');
    requirejs.config({
        //Pass the top-level main.js/index.js require
        //function to requirejs so that node modules
        //are loaded relative to the top-level JS file.
        baseUrl: testDir,
        nodeRequire: require
    });

    if(argv.length > 0) {
        requestedFiles = {};
        argv.forEach(function(arg) {
            var path = arg[0] == '/' ? arg : (cwd + '/' + arg);
            requestedFiles[path] = true;
        });
    }

    // Walker options
    var walker  = walk.walk(cwd+'/test', { followLinks: false });

    walker.on('file', function(root, stat, next) {
        var path;
        if (stat.name.match(/\-suite\.js$/g)) {
            path = root + '/' + stat.name;
            // Add this file to the list of files
            if((! requestedFiles) || requestedFiles[path]) {
                files.push(path);
            }
        }
        next();
    });

    walker.on('end', function() {
        console.log(files);

        var sys = require('util');
        var teste = requirejs('./lib/teste');
        var failedToLoad = [];

        var len_files = files.length;
        if (files.length === 0) {
            console.log('no tests found to run');
            return;
        }

        for (var i = 0; i < len_files; i++) {
            var s = requirejs(files[i]);
            var suites = [];

            if (typeof s === 'undefined') {
                console.error('unable to read from file: '+files[i]);
                failedToLoad.push({'desc':files[i], 'error': 'unable to read suite data from file'});
                continue;
            } else if ((s.hasOwnProperty('name')) && (typeof s.name !== 'undefined')) {
                suites.push(s);
            } else {
                suites = s;
            }

            var num_suites = suites.length;
            for (var n = 0; n < num_suites; n++) {
                if (! teste.loadSuite(suites[n]) ) {
                    console.error("\n"+'unable to load suite: ' + suites[n].desc);
                    console.error(teste.getErrorMessage());
                    failedToLoad.push({'desc':suites[n].desc, 'error': teste.getErrorMessage()});
                }
            }
        }
        teste.begin(function() {
            // on complete
            console.log('---');
            var num_failedToLoad = failedToLoad.length;
            for (var i = 0; i < num_failedToLoad; i++) {
                console.log("\nsuite failed to load: " + failedToLoad[i].desc);
                console.log(failedToLoad[i].error);
            }
            console.log("\n");
        });
    });
})();
